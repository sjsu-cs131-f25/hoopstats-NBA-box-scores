cd ~
git clone https://github.com/sjsu-cs131-f25/hoopstats-NBA-box-scores.git
cd ~/hoopstats-NBA-box-scores
[aidanm@sjsu ~]$ cd ~
[aidanm@sjsu ~]$ git clone https://github.com/sjsu-cs131-f25/hoopstats-NBA-box-scores.git
Cloning into 'hoopstats-NBA-box-scores'...
remote: Enumerating objects: 127, done.
remote: Counting objects: 100% (127/127), done.
remote: Compressing objects: 100% (95/95), done.
remote: Total 127 (delta 58), reused 85 (delta 26), pack-reused 0 (from 0)
Receiving objects: 100% (127/127), 393.51 KiB | 7.87 MiB/s, done.
Resolving deltas: 100% (58/58), done.
[aidanm@sjsu ~]$ cd ~/hoopstats-NBA-box-scores
[aidanm@sjsu hoopstats-NBA-box-scores]$ cd ~/hoopstats-NBA-box-scores && git pull --rebase
Already up to date.
[aidanm@sjsu hoopstats-NBA-box-scores]$ git config --global user.name "Aidan Marra"
[aidanm@sjsu hoopstats-NBA-box-scores]$ git config --global user.email "aidan@sjsu.edu"
[aidanm@sjsu hoopstats-NBA-box-scores]$ bash --version | head -1
GNU bash, version 4.4.20(1)-release (powerpc64le-redhat-linux-gnu)
[aidanm@sjsu hoopstats-NBA-box-scores]$ awk --version | head -1
GNU Awk 4.2.1, API: 2.0 (GNU MPFR 3.1.6-p2, GNU MP 6.1.2)
[aidanm@sjsu hoopstats-NBA-box-scores]$ join --version | head -1
join (GNU coreutils) 8.30
[aidanm@sjsu hoopstats-NBA-box-scores]$ sort --version | head -1
sort (GNU coreutils) 8.30
[aidanm@sjsu hoopstats-NBA-box-scores]$ command -v datamash || echo "NO_DATAMASH"
NO_DATAMASH
[aidanm@sjsu hoopstats-NBA-box-scores]$
[aidanm@sjsu hoopstats-NBA-box-scores]$ sudo dnf config-manager --set-enabled crb 2>/dev/null || true
sudo subscription-manager repos --enable codeready-builder-for-rhel-8-$(arch)-rpms 2>/dev/null || true
sudo dnf install -y epel-release || sudo yum install -y epel-release
sudo dnf install -y datamash || sudo yum install -y datamash

datamash --version[sudo] password for aidanm:

Sorry, try again.
[sudo] password for aidanm:
[sudo] password for aidanm:
Sorry, try again.
[sudo] password for aidanm:
[aidanm@sjsu hoopstats-NBA-box-scores]$ cat > proj3/run_project3.sh <<'EOF'
> #!/usr/bin/env bash
> set -euo pipefail
>
> DATA=proj3/data/samples/playerstats_1k_year.csv
> OUT=proj3/out
> mkdir -p "$OUT"
>
> # --- discover column positions from header (no hardcoding) ---
> COL_YEAR=$(head -1 "$DATA" | tr -d '\r' | awk -F, '{for(i=1;i<=NF;i++) if($i=="gameYear") print i}')
> COL_PID=$( head -1 "$DATA" | tr -d '\r' | awk -F, '{for(i=1;i<=NF;i++) if($i=="personId") print i}')
> COL_3PA=$( head -1 "$DATA" | tr -d '\r' | awk -F, '{for(i=1;i<=NF;i++) if($i=="threePointersAttempted") print i}')
>
> if [ -z "${COL_YEAR:-}" ] || [ -z "${COL_PID:-}" ] || [ -z "${COL_3PA:-}" ]; then
>   echo "ERROR: One or more header names not found. Check CSV header for gameYear/personId/threePointersAttempted."
>   exit 1
> fi
>
> # --- edges: left=gameYear, right=personId ---
> { echo -e "gameYear\tpersonId"
>   awk -F, -v y="$COL_YEAR" -v p="$COL_PID" 'NR>1{print $y "\t" $p}' "$DATA"
  | awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}' \
> } > "$OUT/edges.tsv"
>
> # --- token counts (full graph) ---
> tail -n +2 "$OUT/edges.tsv" | cut -f2 | sort | uniq -c | sort -nr \
>   | awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}' \
>   | sed '1itoken\tcount' > "$OUT/token_counts.tsv"
>
> # --- choose threshold (default: 1 = keep all); THRESH_MANUAL overrides ---
> THRESH="${THRESH_MANUAL:-1}"
> if command -v datamash >/dev/null 2>&1; then
>   # use Q3 automatically if available
>   THRESH=$(tail -n +2 "$OUT/token_counts.tsv" | cut -f2 | datamash q3 1 | awk '{printf "%.0f\n",$1}')
> else
>   # simple Q3 fallback without datamash
>   tail -n +2 "$OUT/token_counts.tsv" | cut -f2 | sort -n > "$OUT/_counts.tmp"
>   N=$(wc -l < "$OUT/_counts.tmp")
>   if [ "$N" -gt 0 ]; then
>     # approx 75th percentile index (1-based)
>     IDX=$(( (3*(N+1))/4 ))
>     THRESH=$(awk -v k="$IDX" 'NR==k{print $1}' "$OUT/_counts.tmp")
>   fi
>   rm -f "$OUT/_counts.tmp"
> fi
> echo -e "threshold\t$THRESH" > "$OUT/thresholds.tsv"
>
> # --- edges_thresholded: keep only playerIds with count >= THRESH ---
> tail -n +2 "$OUT/edges.tsv" | LC_ALL=C sort -t $'\t' -k2,2 > "$OUT/_edges.sort.byR.tsv"
> tail -n +2 "$OUT/token_counts.tsv" | LC_ALL=C sort -t $'\t' -k1,1 > "$OUT/_tokencounts.sort.byTok.tsv"
>
> join -t $'\t' -1 2 -2 1 "$OUT/_edges.sort.byR.tsv" "$OUT/_tokencounts.sort.byTok.tsv" \
>   | awk -v t="$THRESH" '($3+0)>=t{print $2 "\t" $1}' \
>   | { echo -e "gameYear\tpersonId"; cat; } > "$OUT/edges_thresholded.tsv"
>
> rm -f "$OUT/_edges.sort.byR.tsv" "$OUT/_tokencounts.sort.byTok.tsv"
>
> # --- sizes per entity (year) on thresholded edges ---
> tail -n +2 "$OUT/edges_thresholded.tsv" | cut -f1 | sort | uniq -c | sort -k2,2 -k1,1nr \
>   | awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}' \
>   | sed '1igameYear\tsize' > "$OUT/cluster_sizes_by_entity.tsv"
>
> # --- histogram of cluster sizes ---
> tail -n +2 "$OUT/cluster_sizes_by_entity.tsv" | cut -f2 | sort -n | uniq -c | sort -k2,2n \
>   | awk '{n=$2; f=$1; print n "\t" f}' \
>   | sed '1isize\tfrequency' > "$OUT/cluster_sizes.tsv"
>
> # --- TOP 30 playerIds in overall vs thresholded ---
> tail -n +2 "$OUT/edges.tsv" | cut -f2 | sort | uniq -c | sort -nr | head -30 \
>   | awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}' \
>   | sed '1itoken\tcount' > "$OUT/top30_overall.txt"
>
> tail -n +2 "$OUT/edges_thresholded.tsv" | cut -f2 | sort | uniq -c | sort -nr | head -30 \
>   | awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}' \
>   | sed '1itoken\tcount' > "$OUT/top30_clusters.txt"
>
> LC_ALL=C sort -t $'\t' -k1,1 "$OUT/top30_overall.txt"  > "$OUT/top30_overall.sorted.tsv"
> LC_ALL=C sort -t $'\t' -k1,1 "$OUT/top30_clusters.txt" > "$OUT/top30_clusters.sorted.tsv"
>
> join -a1 -a2 -e 0 -o 0,1.2,2.2 -t $'\t' \
>   "$OUT/top30_overall.sorted.tsv" "$OUT/top30_clusters.sorted.tsv" \
>   | sed '1itoken\toverall_count\tclusters_count' > "$OUT/top30_compare.tsv"
>
> comm -3 \
>   <(tail -n +2 "$OUT/top30_overall.sorted.tsv"  | cut -f1) \
>   <(tail -n +2 "$OUT/top30_clusters.sorted.tsv" | cut -f1) > "$OUT/diff_top30.txt"
> EOF
[aidanm@sjsu hoopstats-NBA-box-scores]$
[aidanm@sjsu hoopstats-NBA-box-scores]$ chmod +x proj3/run_project3.sh
[aidanm@sjsu hoopstats-NBA-box-scores]$ rm -rf proj3/out && mkdir -p proj3/out
[aidanm@sjsu hoopstats-NBA-box-scores]$ bash -x proj3/run_project3.sh
+ set -euo pipefail
+ DATA=proj3/data/samples/playerstats_1k_year.csv
+ OUT=proj3/out
+ mkdir -p proj3/out
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="gameYear") print i}'
+ COL_YEAR=5
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="personId") print i}'
+ COL_PID=3
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="threePointersAttempted") print i}'
+ COL_3PA=24
+ '[' -z 5 ']'
+ '[' -z 3 ']'
+ '[' -z 24 ']'
+ echo -e 'gameYear\tpersonId'
+ awk -F, -v y=5 -v p=3 'NR>1{print $y "\t" $p}' proj3/data/samples/playerstats_1k_year.csv
+ tail -n +2 proj3/out/edges.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ THRESH=1
+ command -v datamash
+ tail -n +2 proj3/out/token_counts.tsv
+ cut -f2
+ sort -n
++ wc -l
+ N=808
+ '[' 808 -gt 0 ']'
+ IDX=606
++ awk -v k=606 'NR==k{print $1}' proj3/out/_counts.tmp
+ THRESH=1
+ rm -f proj3/out/_counts.tmp
+ echo -e 'threshold\t1'
+ tail -n +2 proj3/out/edges.tsv
+ LC_ALL=C
+ sort -t '     ' -k2,2
+ tail -n +2 proj3/out/token_counts.tsv
+ LC_ALL=C
+ sort -t '     ' -k1,1
+ join -t '     ' -1 2 -2 1 proj3/out/_edges.sort.byR.tsv proj3/out/_tokencounts.sort.byTok.tsv
+ awk -v t=1 '($3+0)>=t{print $2 "\t" $1}'
+ echo -e 'gameYear\tpersonId'
+ cat
+ rm -f proj3/out/_edges.sort.byR.tsv proj3/out/_tokencounts.sort.byTok.tsv
+ tail -n +2 proj3/out/edges_thresholded.tsv
+ cut -f1
+ sort
+ uniq -c
+ sort -k2,2 -k1,1nr
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1igameYear\tsize'
+ tail -n +2 proj3/out/cluster_sizes_by_entity.tsv
+ cut -f2
+ sort -n
+ uniq -c
+ sort -k2,2n
+ awk '{n=$2; f=$1; print n "\t" f}'
+ sed '1isize\tfrequency'
+ tail -n +2 proj3/out/edges.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ head -30
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ tail -n +2 proj3/out/edges_thresholded.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ head -30
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_overall.txt
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_clusters.txt
+ join -a1 -a2 -e 0 -o 0,1.2,2.2 -t '   ' proj3/out/top30_overall.sorted.tsv proj3/out/top30_clusters.sorted.tsv
+ sed '1itoken\toverall_count\tclusters_count'
+ comm -3 /dev/fd/63 /dev/fd/62
++ tail -n +2 proj3/out/top30_overall.sorted.tsv
++ cut -f1
++ tail -n +2 proj3/out/top30_clusters.sorted.tsv
++ cut -f1
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges.tsv
gameYear        personId
1979    77653
2017    202695
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges_thresholded.tsv
gameYear        personId
1981    100263
1991    100263
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_sizes_by_entity.tsv
gameYear        size
1949    3
1950    1
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_sizes.tsv
size    frequency
1       2
2       2
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_overall.txt
token   count
76979   4
204     4
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_clusters.txt
token   count
76979   4
204     4
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_compare.tsv
token   overall_count   clusters_count
101150  4       4
107     3       3
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/diff_top30.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_outcomes.tsv
head: cannot open 'proj3/out/cluster_outcomes.tsv' for reading: No such file or directory
[aidanm@sjsu hoopstats-NBA-box-scores]$ THRESH_MANUAL=10 bash proj3/run_project3.sh
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux capture-pane -p -S - -E - > proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux capture-pane -S - -E -
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux save-buffer proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux delete-buffer
[aidanm@sjsu hoopstats-NBA-box-scores]$ ls -lh proj3/out/tmux_session.txt
-rw-r--r-- 1 aidanm jelenag 11K Oct  7 23:50 proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ wc -l  proj3/out/tmux_session.txt
259 proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -n 30 proj3/out/tmux_session.txt
cd ~
git clone https://github.com/sjsu-cs131-f25/hoopstats-NBA-box-scores.git
cd ~/hoopstats-NBA-box-scores
[aidanm@sjsu ~]$ cd ~
[aidanm@sjsu ~]$ git clone https://github.com/sjsu-cs131-f25/hoopstats-NBA-box-scores.git
Cloning into 'hoopstats-NBA-box-scores'...
remote: Enumerating objects: 127, done.
remote: Counting objects: 100% (127/127), done.
remote: Compressing objects: 100% (95/95), done.
remote: Total 127 (delta 58), reused 85 (delta 26), pack-reused 0 (from 0)
Receiving objects: 100% (127/127), 393.51 KiB | 7.87 MiB/s, done.
Resolving deltas: 100% (58/58), done.
[aidanm@sjsu ~]$ cd ~/hoopstats-NBA-box-scores
[aidanm@sjsu hoopstats-NBA-box-scores]$ cd ~/hoopstats-NBA-box-scores && git pull --rebase
Already up to date.
[aidanm@sjsu hoopstats-NBA-box-scores]$ git config --global user.name "Aidan Marra"
[aidanm@sjsu hoopstats-NBA-box-scores]$ git config --global user.email "aidan@sjsu.edu"
[aidanm@sjsu hoopstats-NBA-box-scores]$ bash --version | head -1
GNU bash, version 4.4.20(1)-release (powerpc64le-redhat-linux-gnu)
[aidanm@sjsu hoopstats-NBA-box-scores]$ awk --version | head -1
GNU Awk 4.2.1, API: 2.0 (GNU MPFR 3.1.6-p2, GNU MP 6.1.2)
[aidanm@sjsu hoopstats-NBA-box-scores]$ join --version | head -1
join (GNU coreutils) 8.30
[aidanm@sjsu hoopstats-NBA-box-scores]$ sort --version | head -1
sort (GNU coreutils) 8.30
[aidanm@sjsu hoopstats-NBA-box-scores]$ command -v datamash || echo "NO_DATAMASH"
NO_DATAMASH
[aidanm@sjsu hoopstats-NBA-box-scores]$
[aidanm@sjsu hoopstats-NBA-box-scores]$ sudo dnf config-manager --set-enabled crb 2>/dev/null || true
sudo subscription-manager repos --enable codeready-builder-for-rhel-8-$(arch)-rpms 2>/dev/null || true
[aidanm@sjsu hoopstats-NBA-box-scores]$ tail -n 50 proj3/out/tmux_session.txt
+ sort -nr
+ head -30
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_overall.txt
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_clusters.txt
+ join -a1 -a2 -e 0 -o 0,1.2,2.2 -t '   ' proj3/out/top30_overall.sorted.tsv proj3/out/top30_clusters.sorted.tsv
+ sed '1itoken\toverall_count\tclusters_count'
+ comm -3 /dev/fd/63 /dev/fd/62
++ tail -n +2 proj3/out/top30_overall.sorted.tsv
++ cut -f1
++ tail -n +2 proj3/out/top30_clusters.sorted.tsv
++ cut -f1
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges.tsv
gameYear        personId
1979    77653
2017    202695
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges_thresholded.tsv
gameYear        personId
1981    100263
1991    100263
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_sizes_by_entity.tsv
gameYear        size
1949    3
1950    1
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_sizes.tsv
size    frequency
1       2
2       2
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_overall.txt
token   count
76979   4
204     4
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_clusters.txt
token   count
76979   4
204     4
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/top30_compare.tsv
token   overall_count   clusters_count
101150  4       4
107     3       3
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/diff_top30.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/cluster_outcomes.tsv
head: cannot open 'proj3/out/cluster_outcomes.tsv' for reading: No such file or directory
[aidanm@sjsu hoopstats-NBA-box-scores]$ THRESH_MANUAL=10 bash proj3/run_project3.sh
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux capture-pane -p -S - -E - > proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux capture-pane -S - -E -

[aidanm@sjsu hoopstats-NBA-box-scores]$ cd ~/hoopstats-NBA-box-scores
[aidanm@sjsu hoopstats-NBA-box-scores]$ pwd
/mnt/scratch/CS131_jelenag/students/aidanm/hoopstats-NBA-box-scores
[aidanm@sjsu hoopstats-NBA-box-scores]$ ls -lh proj3/out/tmux_session.txt
-rw-r--r-- 1 aidanm jelenag 11K Oct  7 23:50 proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ realpath proj3/out/tmux_session.txt
/mnt/scratch/CS131_jelenag/students/aidanm/hoopstats-NBA-box-scores/proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ chmod 644 proj3/out/tmux_session.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ tmux display -p '#{session_name}:#{window_index}.#{pane_index}'
proj3:0.0
[aidanm@sjsu hoopstats-NBA-box-scores]$ cat >> proj3/run_project3.sh <<'EOS'
> # --- outcomes per cluster (gameYear) using threePointersAttempted (no datamash needed) ---
> # Produces: cluster_outcomes.tsv  AND  clusters_outcomes.tsv (both identical for teammates)
> {
>   echo -e "gameYear\tcount\tmean_3PA\tmedian_3PA"
>   # Extract (year, 3PA), sort by year then value, then compute per-year stats
>   awk -F, -v y="$COL_YEAR" -v v="$COL_3PA" 'NR>1 && $y!="" && $v!="" {print $y "\t" $v+0}' "$DATA" \
>   | LC_ALL=C sort -t $'\t' -k1,1 -k2,2n \
>   | awk -F'\t' '
>       {
>         if (NR==1) {prev=$1}
>         if ($1!=prev) {
>           mid=int((cnt+1)/2)
>           if (cnt%2==1) med=vals[mid]; else med=(vals[mid]+vals[mid+1])/2
>           mean=sum/cnt
>           printf "%s\t%d\t%.6f\t%.6f\n", prev, cnt, mean, med
>           delete vals; cnt=0; sum=0
>           prev=$1
>         }
>         cnt++; sum+=$2; vals[cnt]=$2
>       }
>       END {
>         if (cnt>0) {
>           mid=int((cnt+1)/2)
>           if (cnt%2==1) med=vals[mid]; else med=(vals[mid]+vals[mid+1])/2
>           mean=sum/cnt
>           printf "%s\t%d\t%.6f\t%.6f\n", prev, cnt, mean, med
>         }
>       }'
> } > "$OUT/cluster_outcomes.tsv"
>
> cp -f "$OUT/cluster_outcomes.tsv" "$OUT/clusters_outcomes.tsv"
> EOS
[aidanm@sjsu hoopstats-NBA-box-scores]$ rm -rf proj3/out && mkdir -p proj3/out
[aidanm@sjsu hoopstats-NBA-box-scores]$ THRESH_MANUAL=3 bash -x proj3/run_project3.sh
+ set -euo pipefail
+ DATA=proj3/data/samples/playerstats_1k_year.csv
+ OUT=proj3/out
+ mkdir -p proj3/out
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="gameYear") print i}'
+ COL_YEAR=5
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="personId") print i}'
+ COL_PID=3
++ head -1 proj3/data/samples/playerstats_1k_year.csv
++ tr -d '\r'
++ awk -F, '{for(i=1;i<=NF;i++) if($i=="threePointersAttempted") print i}'
+ COL_3PA=24
+ '[' -z 5 ']'
+ '[' -z 3 ']'
+ '[' -z 24 ']'
+ echo -e 'gameYear\tpersonId'
+ awk -F, -v y=5 -v p=3 'NR>1{print $y "\t" $p}' proj3/data/samples/playerstats_1k_year.csv
+ tail -n +2 proj3/out/edges.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ '[' -n 3 ']'
+ THRESH=3
+ SRC=manual
+ printf 'source\tthreshold\n%s\t%s\n' manual 3
+ tail -n +2 proj3/out/edges.tsv
+ LC_ALL=C
+ sort -t '     ' -k2,2
+ tail -n +2 proj3/out/token_counts.tsv
+ LC_ALL=C
+ sort -t '     ' -k1,1
+ join -t '     ' -1 2 -2 1 proj3/out/_edges.sort.byR.tsv proj3/out/_tok.sort.tsv
+ awk -v t=3 '($3+0)>=t{print $2 "\t" $1}'
+ echo -e 'gameYear\tpersonId'
+ cat
+ rm -f proj3/out/_edges.sort.byR.tsv proj3/out/_tok.sort.tsv
+ tail -n +2 proj3/out/edges_thresholded.tsv
+ cut -f1
+ sort
+ uniq -c
+ sort -k2,2 -k1,1nr
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1igameYear\tsize'
+ tail -n +2 proj3/out/cluster_sizes_by_entity.tsv
+ cut -f2
+ sort -n
+ uniq -c
+ sort -k2,2n
+ awk '{n=$2; f=$1; print n "\t" f}'
+ sed '1isize\tfrequency'
+ tail -n +2 proj3/out/edges.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ head -30
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ tail -n +2 proj3/out/edges_thresholded.tsv
+ cut -f2
+ sort
+ uniq -c
+ sort -nr
+ head -30
+ awk '{c=$1;$1="";sub(/^ +/,"");print $0 "\t" c}'
+ sed '1itoken\tcount'
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_overall.txt
+ LC_ALL=C
+ sort -t '     ' -k1,1 proj3/out/top30_clusters.txt
+ join -a1 -a2 -e 0 -o 0,1.2,2.2 -t '   ' proj3/out/top30_overall.sorted.tsv proj3/out/top30_clusters.sorted.tsv
+ sed '1itoken\toverall_count\tclusters_count'
+ comm -3 /dev/fd/63 /dev/fd/62
++ tail -n +2 proj3/out/top30_overall.sorted.tsv
++ cut -f1
++ tail -n +2 proj3/out/top30_clusters.sorted.tsv
++ cut -f1
+ echo DONE
DONE
+ echo -e 'gameYear\tcount\tmean_3PA\tmedian_3PA'
+ awk -F, -v y=5 -v v=24 'NR>1 && $y!="" && $v!="" {print $y "\t" $v+0}' proj3/data/samples/playerstats_1k_year.csv
+ LC_ALL=C
+ sort -t '     ' -k1,1 -k2,2n
+ awk '-F\t' '
      {
        if (NR==1) {prev=$1}
        if ($1!=prev) {
          mid=int((cnt+1)/2)
          if (cnt%2==1) med=vals[mid]; else med=(vals[mid]+vals[mid+1])/2
          mean=sum/cnt
          printf "%s\t%d\t%.6f\t%.6f\n", prev, cnt, mean, med
          delete vals; cnt=0; sum=0
          prev=$1
        }
        cnt++; sum+=$2; vals[cnt]=$2
      }
      END {
        if (cnt>0) {
          mid=int((cnt+1)/2)
          if (cnt%2==1) med=vals[mid]; else med=(vals[mid]+vals[mid+1])/2
          mean=sum/cnt
          printf "%s\t%d\t%.6f\t%.6f\n", prev, cnt, mean, med
        }
      }'
+ cp -f proj3/out/cluster_outcomes.tsv proj3/out/clusters_outcomes.tsv
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges.tsv
head -3 proj3/out/edges_thresholded.tsv
gameYear        personId
1979    77653
2017    202695
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -3 proj3/out/edges_thresholded.tsv
gameYear        personId
2009    101150
2015    101150
[aidanm@sjsu hoopstats-NBA-box-scores]$ cat  proj3/out/thresholds.tsv          # should show: source  manual  and thr
eshold 3
source  threshold
manual  3
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -5 proj3/out/cluster_sizes.tsv
head -5 proj3/out/top30_overall.txt
head -5 proj3/out/top30_clusters.txt
wc -l proj3/out/diff_top30.txt         # should be > 0 for THRESH_MANUAL=3
head -5 proj3/out/cluster_outcomes.tsvsize      frequency
1       21
2       13
3       7
4       1
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -5 proj3/out/top30_overall.txt
token   count
76979   4
204     4
101150  4
947     3
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -5 proj3/out/top30_clusters.txt
token   count
76979   4
204     4
101150  4
947     3
[aidanm@sjsu hoopstats-NBA-box-scores]$ wc -l proj3/out/diff_top30.txt         # should be > 0 for THRESH_MANUAL=3
7 proj3/out/diff_top30.txt
[aidanm@sjsu hoopstats-NBA-box-scores]$ head -5 proj3/out/cluster_outcomes.tsv
gameYear        count   mean_3PA        median_3PA
1949    3       0.000000        0.000000
1950    1       0.000000        0.000000
1951    3       0.000000        0.000000
1953    4       0.000000        0.000000
[aidanm@sjsu hoopstats-NBA-box-scores]$
